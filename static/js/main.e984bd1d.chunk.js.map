{"version":3,"sources":["redux/contants/action-types.js","components/Products.js","redux/actions/productActions.js","components/ProductsList.js","components/Header.js","components/CartItem.js","components/Cart.js","App.js","redux/reducers/productReducer.js","redux/store.js","index.js"],"names":["FETCH_PRODUCTS_REQUEST","FETCH_PRODUCTS_SUCCESS","FETCH_PRODUCTS_FAIL","ADD_TO_CART","ADJUST_ITEM_QTY","REMOVE_FROM_CART","connect","state","products","productData","data","dispatch","FetchProductAction","a","type","axios","get","response","payload","addToCart","id","actionTypes","props","useEffect","useState","setData","map","item","index","className","style","width","height","src","filename","alt","title","description","price","rating","onClick","ProductsList","Header","history","useHistory","to","e","preventDefault","push","adjustQty","value","qty","removeFromCart","input","setInput","htmlFor","min","name","onChange","target","cart","totalPrice","setTotalPrice","totalItems","setTotalItems","items","forEach","console","log","App","path","exact","component","Cart","initialState","loading","errorMSg","reducer","combineReducers","previousState","action","find","product","inCartIndex","findIndex","existingCart","filter","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e984bd1d.chunk.js","sourcesContent":["\nexport const FETCH_PRODUCTS_REQUEST = \"FETCH_PRODUCTS_REQUEST\";\nexport const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\nexport const FETCH_PRODUCTS_FAIL = \"FETCH_PRODUCTS_FAIL\";\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADJUST_ITEM_QTY = \"ADJUST_ITEM_QTY\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const LOAD_CURRENT_ITEM = \"LOAD_CURRENT_ITEM\";\n","import React, { useEffect, useState } from \"react\";\nimport \"../product.css\";\nimport { connect } from \"react-redux\";\n\nimport { FetchProductAction, addToCart } from \"../redux/actions/productActions\";\n\nconst Products = (props) => {\n  const { products, FetchProductAction, addToCart } = props;\n\n  useEffect(() => {\n    FetchProductAction();\n  }, [FetchProductAction]);\n\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    setData(products);\n  }, [products]);\n\n  return (\n    <>\n      {data?.map((item, index) => (\n        <div className=\"main\" key={index}>\n          <div className=\"card\" style={{ width: \"18rem\", height: \"500px\" }}>\n            <img\n              src={item?.filename}\n              className=\"card-img-top image\"\n              alt=\"...\"\n            />\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{item?.title}</h5>\n              <h5 className=\"card-type\">{item?.type}</h5>\n              <p className=\"card-text\">\"{item?.description}\"</p>\n              <h5 className=\"card-price\">$ {item?.price}</h5>\n              <h5 className=\"card-rating\">Rating {item?.rating}</h5>\n\n              <button\n                className=\"btn btn-primary\"\n                onClick={() => addToCart(item.id)}\n              >\n                Add to Cart\n              </button>\n            </div>\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    products: state.productData.products.data,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  FetchProductAction: () => dispatch(FetchProductAction()),\n  addToCart: (id) => dispatch(addToCart(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\n","import * as actionTypes from \"../contants/action-types\";\n\nimport axios from \"axios\";\nimport {\n  FETCH_PRODUCTS_REQUEST,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_FAIL,\n} from \"../contants/action-types\";\n\nexport const FetchProductAction = () => async (dispatch) => {\n  try {\n    dispatch({\n      type: FETCH_PRODUCTS_REQUEST,\n    });\n    const response = await axios.get(\n      \"https://api4286.s3.ap-south-1.amazonaws.com/products.json\"\n    );\n    dispatch({\n      type: FETCH_PRODUCTS_SUCCESS,\n      payload: response,\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_PRODUCTS_FAIL,\n      payload: error,\n    });\n  }\n};\n\nexport const addToCart = (itemID) => {\n  return {\n    type: actionTypes.ADD_TO_CART,\n    payload: {\n      id: itemID,\n    },\n  };\n};\n\nexport const removeFromCart = (itemID) => {\n  return {\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: {\n      id: itemID,\n    },\n  };\n};\n\nexport const adjustItemQty = (itemID, qty) => {\n  return {\n    type: actionTypes.ADJUST_ITEM_QTY,\n    payload: {\n      id: itemID,\n      qty,\n    },\n  };\n};\n\nexport const loadCurrentItem = (item) => {\n  return {\n    type: actionTypes.LOAD_CURRENT_ITEM,\n    payload: item,\n  };\n};\n","import React from \"react\";\n\nimport Products from \"./Products\";\n\nconst ProductsList = () => {\n  return (\n    <div>\n      <Products />\n    </div>\n  );\n};\n\nexport default ProductsList;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport \"../product.css\";\n\nconst Header = () => {\n  const history = useHistory();\n  const handleCart = (e) => {\n    e.preventDefault();\n    history.push(\"/cart\");\n  };\n  return (\n    <div className=\"main\">\n      <div className=\"header\">\n        <Link to=\"/\" className=\"title\">\n          <h1>Products</h1>\n        </Link>\n        <button className=\"btn btn-warning cart_btn\" onClick={handleCart}>\n          CART\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../components/CartItem.css\";\nimport { adjustItemQty, removeFromCart } from \"../redux/actions/productActions\";\n\nconst CartItem = ({ item, adjustQty, removeFromCart }) => {\n  const [input, setInput] = useState(\"\");\n\n  const onChangeHandler = (e) => {\n    setInput(e.target.value);\n    adjustQty(item.id, e.target.value);\n  };\n\n  return (\n    <div className=\"cartItem\">\n      <img className=\"cartItem__image\" src={item.filename} alt={item.title} />\n      <div className=\"cart_detail_body\">\n        <div className=\"cartItem__details\">\n          <p className=\"details__title\">{item.title}</p>\n          <p className=\"details__desc\">{item.description}</p>\n        </div>\n        <div className=\"cartItem__actions\">\n          <p className=\"details__price\">$ {item.price}</p>\n\n          <div className=\"cartItem__qty\">\n            <label htmlFor=\"qty\">Qty</label>\n            <input\n              min=\"1\"\n              type=\"number\"\n              id=\"qty\"\n              name=\"qty\"\n              value={input}\n              onChange={onChangeHandler}\n            />\n          </div>\n          <button\n            onClick={() => removeFromCart(item.id)}\n            className=\"actions__deleteItemBtn\"\n          >\n            <img\n              src=\"https://image.flaticon.com/icons/svg/709/709519.svg\"\n              alt=\"\"\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    adjustQty: (id, value) => dispatch(adjustItemQty(id, value)),\n    removeFromCart: (id) => dispatch(removeFromCart(id)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CartItem);\n","import React, { useState, useEffect } from \"react\";\nimport \"./Cart.css\";\n\nimport { connect } from \"react-redux\";\n\nimport CartItem from \"./CartItem\";\n\nconst Cart = ({ cart }) => {\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalItems, setTotalItems] = useState(0);\n\n  useEffect(() => {\n    let items = 0;\n    let price = 0;\n\n    cart?.forEach((item) => {\n      items += item.qty;\n      price += item.qty * item.price;\n    });\n\n    setTotalItems(items);\n    setTotalPrice(price);\n  }, [cart, totalPrice, totalItems, setTotalPrice, setTotalItems]);\n  console.log(cart, totalItems, totalPrice);\n  return (\n        <div className=\"cart\">\n    <div className=\"cart__items\">\n        {cart?.map((item) => (\n          <CartItem key={item.id} item={item} />\n        ))}\n      </div>\n      <div className=\"cart__summary\">\n        <h4 className=\"summary__title\">Cart Summary</h4>\n        <div className=\"summary__price\">\n          <span>TOTAL: ({totalItems} items)</span>\n          <span>$ {totalPrice}</span>\n        </div>\n        <button className=\"summary__checkoutBtn\">\n          Proceed To Checkout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    cart: state.productData.cart,\n  };\n};\n\nexport default connect(mapStateToProps)(Cart);\n","import ProductsList from \"./components/ProductsList\";\nimport Header from \"./components/Header\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Cart from \"./components/Cart\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route path=\"/\" exact component={ProductsList} />\n          <Route path=\"/cart\" exact component={Cart} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  FETCH_PRODUCTS_REQUEST,\n  FETCH_PRODUCTS_SUCCESS,\n  FETCH_PRODUCTS_FAIL,\n  ADD_TO_CART,\n  REMOVE_FROM_CART,\n  ADJUST_ITEM_QTY,\n} from \"../contants/action-types\";\n\nconst initialState = {\n  products: {\n    loading: false,\n    data: [],\n    errorMSg: \"\",\n  },\n  cart: [],\n};\n\nexport const FetchProductReducer = (previousState = initialState, action) => {\n  switch (action.type) {\n    case FETCH_PRODUCTS_REQUEST: {\n      return {\n        ...previousState,\n        products: {\n          ...previousState.products,\n          loading: true,\n          data: [],\n          errorMSg: \"\",\n        },\n      };\n    }\n    case FETCH_PRODUCTS_SUCCESS: {\n      return {\n        ...previousState,\n        products: {\n          loading: false,\n          data: action.payload.data,\n          errorMSg: \"\",\n        },\n      };\n    }\n    case FETCH_PRODUCTS_FAIL: {\n      return {\n        ...previousState,\n        products: {\n          loading: false,\n          data: [],\n          errorMSg: action.payload,\n        },\n      };\n    }\n    case ADD_TO_CART: {\n      const products = previousState.products.data;\n      const item = products.find((product) => product.id === action.payload.id);\n\n      const inCartIndex = previousState.cart.findIndex(\n        (item) => item.id === action.payload.id\n      );\n      let existingCart = [...previousState.cart];\n      if (inCartIndex > -1) {\n        existingCart = existingCart.map((item) =>\n          item.id === action.payload.id ? { ...item, qty: item.qty + 1 } : item\n        );\n      } else {\n        existingCart.push({ ...item, qty: 1 });\n      }\n\n      return {\n        ...previousState,\n        cart: existingCart,\n      };\n    }\n    case REMOVE_FROM_CART: {\n      return {\n        ...previousState,\n        cart: previousState.cart.filter(\n          (item) => item.id !== action.payload.id\n        ),\n      };\n    }\n    case ADJUST_ITEM_QTY:\n      return {\n        ...previousState,\n        cart: previousState.cart.map((item) =>\n          item.id === action.payload.id\n            ? { ...item, qty: +action.payload.qty }\n            : item\n        ),\n      };\n    default: {\n      return previousState || initialState;\n    }\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nimport { FetchProductReducer } from \"./reducers/productReducer\";\n\nconst reducer = combineReducers({\n  productData: FetchProductReducer,\n});\n\nconst initialState = {};\n\nconst middleware = [thunk];\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}